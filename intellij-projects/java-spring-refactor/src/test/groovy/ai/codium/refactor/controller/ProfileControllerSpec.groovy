package ai.codium.refactor.controller

import ai.codium.refactor.entity.UserProfile
import ai.codium.refactor.service.ProfileService
import org.springframework.http.HttpStatus
import org.springframework.jdbc.core.JdbcTemplate
import spock.lang.Specification

// Generated by CodiumAI

class ProfileControllerSpec extends Specification {


    // Retrieve a user profile by ID successfully
    def "should retrieve user profile by ID successfully when ID exists"() {
        given:
        ProfileService profileService = Mock(ProfileService)
        JdbcTemplate jdbcTemplate = Mock(JdbcTemplate)
        def profileController = new ProfileController(profileService, jdbcTemplate)
        def userProfile = new UserProfile(id: 1L, name: "John Doe")

        when:
        profileService.findUserProfileById(1L) >> userProfile
        def response = profileController.getProfile(1L)

        then:
        response.statusCode == HttpStatus.OK
        response.body == userProfile
    }

    // Retrieve all user profiles successfully
    def "should retrieve all user profiles successfully"() {
        given:
        def profileService = Mock(ProfileService)
        def jdbcTemplate = Mock(JdbcTemplate)
        def profileController = new ProfileController(profileService, jdbcTemplate)
        def userProfiles = [new UserProfile(id: 1L, name: "John Doe"), new UserProfile(id: 2L, name: "Jane Doe")]

        when:
        jdbcTemplate.query(_, _) >> userProfiles
        def response = profileController.profiles()

        then:
        response.statusCode == HttpStatus.OK
        response.body == userProfiles
    }

}